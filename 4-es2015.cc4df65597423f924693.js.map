{"version":3,"sources":["webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha.component.js.pre-build-optimizer.js","webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha-common.module.js.pre-build-optimizer.js","webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha-loader.service.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/groupBy.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/queue.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Notification.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/throwError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/observeOn.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/ReplaySubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/AsyncSubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/Immediate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/asap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/generate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/iif.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isNumeric.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/interval.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/never.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/pairs.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/race.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/range.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/timer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/using.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/zip.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/index.js.pre-build-optimizer.js","webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha.module.js.pre-build-optimizer.js","webpack:///./src/app/coming-soon/coming-soon.component.ts","webpack:///./src/app/coming-soon/coming-soon.module.ts","webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/coming-soon/coming-soon.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/coming-soon/coming-soon.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/coming-soon/coming-soon.component.html","webpack:///./src/app/coming-soon/coming-soon.module.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/ng-recaptcha/recaptcha/recaptcha-settings.js.pre-build-optimizer.js"],"names":["Object","defineProperty","exports","value","core_1","__webpack_require__","nextId","RecaptchaComponent","elementRef","loader","zone","settings","this","id","resolved","EventEmitter","siteKey","theme","type","size","badge","prototype","ngAfterViewInit","_this","subscription","ready","subscribe","grecaptcha","render","Function","renderRecaptcha","ngOnDestroy","grecaptchaReset","unsubscribe","execute","widget","executeRequested","reset","getResponse","emit","expired","captchaResponseCallback","response","runOutsideAngular","nativeElement","callback","run","expired-callback","sitekey","tabindex","tabIndex","decorators","Component","args","exportAs","selector","template","propDecorators","Input","HostBinding","Output","recaptcha_component_1","RecaptchaCommonModule","NgModule","declarations","common_1","rxjs_1","loadScript","renderMode","onLoaded","urlParams","url","nonce","window","ng2recaptchaloaded","script","document","createElement","innerHTML","src","async","defer","head","appendChild","RECAPTCHA_LANGUAGE","InjectionToken","RECAPTCHA_BASE_URL","RECAPTCHA_NONCE","RecaptchaLoaderService","platformId","language","baseUrl","init","isPlatformBrowser","asObservable","of","subject_1","BehaviorSubject","next","Injectable","groupBy_GroupedObservable","Observable","[object Object]","key","groupSubject","refCountSubscription","super","subscriber","Subscription","closed","add","groupBy_InnerRefCountSubscription","parent","count","attemptedToUnsubscribe","QueueAction_QueueAction","AsyncAction","scheduler","work","state","delay","schedule","flush","_execute","requestAsyncId","QueueScheduler_QueueScheduler","AsyncScheduler","queue","NotificationKind","throwError","error","dispatch","Notification_Notification","Notification","kind","hasValue","observer","complete","nextOrObserver","observe","do","empty","Error","undefinedValueNotification","err","undefined","completeNotification","observeOn_ObserveOnSubscriber","Subscriber","destination","arg","notification","ObserveOnMessage","scheduleMessage","createNext","createError","createComplete","ReplaySubject_ReplaySubject","Subject","bufferSize","Number","POSITIVE_INFINITY","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","push","length","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","len","ObjectUnsubscribedError","isStopped","hasError","EMPTY","observers","SubjectSubscription","i","thrownError","now","eventsCount","spliceCount","time","Math","max","splice","AsyncSubject_AsyncSubject","arguments","hasNext","hasCompleted","_subscribe","nextHandle","tasksByHandle","Immediate","cb","handle","Promise","resolve","then","runIfPresent","AsapAction_AsapAction","actions","scheduled","setImmediate","bind","recycleAsyncId","clearImmediate","AsapScheduler_AsapScheduler","action","active","index","asap","AnimationFrameAction_AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler_AnimationFrameScheduler","animationFrame","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","SchedulerAction","VirtualTimeScheduler_VirtualAction","maxFrames","frame","frameTimeFactor","sort","sortActions","a","b","isObservable","obj","lift","TimeoutErrorImpl","call","message","name","create","TimeoutError","bindCallback","callbackFunc","resultSelector","isScheduler","pipe","map","isArray","context","subject","params","bindCallback_dispatch","handler","innerArgs","apply","canReportError","console","warn","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","fromEventPattern","addHandler","removeHandler","e","retValue","isFunction","generate","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","initialState","identity","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","val","parseFloat","interval","period","scheduler_async","interval_dispatch","counter","NEVER","noop","never","onErrorResumeNext","sources","first","remainder","subNext","from","pairs","keys","pairs_dispatch","hasOwnProperty","race","observables","fromArray","RaceOperator","source","race_RaceSubscriber","OuterSubscriber","hasFirst","subscriptions","observable","subscribeToResult","outerValue","innerValue","outerIndex","innerIndex","innerSub","remove","range","start","current","range_dispatch","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","observableFactory","resource","result","zip","pop","ZipOperator","zip_ZipSubscriber","values","iterators","zip_StaticArrayIterator","iterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","shouldComplete","done","_tryresultSelector","nextResult","array","buffer","isComplete","notifyInactive","checkIterators","d","__webpack_exports__","ConnectableObservable","symbol_observable","Scheduler","ArgumentOutOfRangeError","EmptyError","UnsubscriptionError","combineLatest","concat","forkJoin","fromEvent","merge","config","recaptcha_common_module_1","recaptcha_loader_service_1","RecaptchaModule","forRoot","imports","providers","ComingSoonComponent","Email","send","SecureToken","To","From","Body","ComingSoonModule","RenderType_RecaptchaComponent","core","encapsulation","styles","data","View_RecaptchaComponent_0","_l","RenderType_ComingSoonComponent","View_ComingSoonComponent_0","_v","en","$event","ad","component","testEmail","test","recaptcha_component","recaptcha_loader_service","recaptcha_settings","_ck","View_ComingSoonComponent_Host_0","ComingSoonComponentNgFactory","ComingSoonModuleNgFactory","router_ngfactory","common","vx_components","angular_fontawesome","shared_module","recaptcha_common_module","recaptcha_module","router","path","RECAPTCHA_SETTINGS"],"mappings":"6FACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAASC,EAAQ,QAGjBC,GAF6BD,EAAQ,QACdA,EAAQ,QACtB,GA2IbH,EAAQK,mBA1IgC,WACpC,SAASA,EAAmBC,EAAYC,EAAQC,EAAMC,GAClDC,KAAKJ,WAAaA,EAClBI,KAAKH,OAASA,EACdG,KAAKF,KAAOA,EACZE,KAAKC,GAAK,eAAiBP,IAC3BM,KAAKE,SAAW,IAAIV,EAAOW,aACvBJ,IACAC,KAAKI,QAAUL,EAASK,QACxBJ,KAAKK,MAAQN,EAASM,MACtBL,KAAKM,KAAOP,EAASO,KACrBN,KAAKO,KAAOR,EAASQ,KACrBP,KAAKQ,MAAQT,EAASS,OA4H9B,OAzHAb,EAAmBc,UAAUC,gBAAkB,WAC3C,IAAIC,EAAQX,KACZA,KAAKY,aAAeZ,KAAKH,OAAOgB,MAAMC,UAAU,SAAUC,GACpC,MAAdA,GAAsBA,EAAWC,kBAAkBC,WACnDN,EAAMI,WAAaA,EACnBJ,EAAMO,sBAIlBvB,EAAmBc,UAAUU,YAAc,WAGvCnB,KAAKoB,kBACDpB,KAAKY,cACLZ,KAAKY,aAAaS,eAW1B1B,EAAmBc,UAAUa,QAI7B,WACsB,cAAdtB,KAAKO,OAGU,MAAfP,KAAKuB,OACLvB,KAAKe,WAAWO,QAAQtB,KAAKuB,QAI7BvB,KAAKwB,kBAAmB,IAGhC7B,EAAmBc,UAAUgB,MAAQ,WACd,MAAfzB,KAAKuB,SACDvB,KAAKe,WAAWW,YAAY1B,KAAKuB,SAIjCvB,KAAKE,SAASyB,KAAK,MAEvB3B,KAAKoB,oBAKbzB,EAAmBc,UAAUmB,QAC7B,WACI5B,KAAKE,SAASyB,KAAK,OAIvBhC,EAAmBc,UAAUoB,wBAC7B,SAAUC,GACN9B,KAAKE,SAASyB,KAAKG,IAIvBnC,EAAmBc,UAAUW,gBAC7B,WACI,IAAIT,EAAQX,KACO,MAAfA,KAAKuB,QACLvB,KAAKF,KAAKiC,kBAAkB,WAAc,OAAOpB,EAAMI,WAAWU,MAAMd,EAAMY,WAKtF5B,EAAmBc,UAAUS,gBAC7B,WACI,IAAIP,EAAQX,KACZA,KAAKuB,OAASvB,KAAKe,WAAWC,OAAOhB,KAAKJ,WAAWoC,cAAe,CAChExB,MAAOR,KAAKQ,MACZyB,SAAU,SAAUH,GAChBnB,EAAMb,KAAKoC,IAAI,WAAc,OAAOvB,EAAMkB,wBAAwBC,MAEtEK,mBAAoB,WAChBxB,EAAMb,KAAKoC,IAAI,WAAc,OAAOvB,EAAMiB,aAE9CQ,QAASpC,KAAKI,QACdG,KAAMP,KAAKO,KACX8B,SAAUrC,KAAKsC,SACfjC,MAAOL,KAAKK,MACZC,KAAMN,KAAKM,QAEe,IAA1BN,KAAKwB,mBACLxB,KAAKwB,kBAAmB,EACxBxB,KAAKsB,YAGb3B,EAAmB4C,WAAa,CAC5B,CAAEjC,KAAMd,EAAOgD,UAAWC,KAAM,CAAC,CACrBC,SAAU,YACVC,SAAU,aACVC,SAAU,OAU1BjD,EAAmBkD,eAAiB,CAChC5C,GAAM,CAAC,CAAEK,KAAMd,EAAOsD,OAAS,CAAExC,KAAMd,EAAOuD,YAAaN,KAAM,CAAC,aAClErC,QAAW,CAAC,CAAEE,KAAMd,EAAOsD,QAC3BzC,MAAS,CAAC,CAAEC,KAAMd,EAAOsD,QACzBxC,KAAQ,CAAC,CAAEA,KAAMd,EAAOsD,QACxBvC,KAAQ,CAAC,CAAED,KAAMd,EAAOsD,QACxBR,SAAY,CAAC,CAAEhC,KAAMd,EAAOsD,QAC5BtC,MAAS,CAAC,CAAEF,KAAMd,EAAOsD,QACzB5C,SAAY,CAAC,CAAEI,KAAMd,EAAOwD,UAEzBrD,EAxI4B,sCCLvCP,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAASC,EAAQ,QACjBwD,EAAwBxD,EAAQ,QAgBpCH,EAAQ4D,sBAfmC,WACvC,SAASA,KAYT,OAVAA,EAAsBX,WAAa,CAC/B,CAAEjC,KAAMd,EAAO2D,SAAUV,KAAM,CAAC,CACpBW,aAAc,CACVH,EAAsBtD,oBAE1BL,QAAS,CACL2D,EAAsBtD,wBAInCuD,EAb+B,sCCH1C9D,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAI8D,EAAW5D,EAAQ,QACnBD,EAASC,EAAQ,QACjB6D,EAAS7D,EAAQ,QAIrB,SAAS8D,EAAWC,EAAYC,EAAUC,EAAWC,EAAKC,GACtDC,OAAOC,mBAAqB,WACxBL,EAAS1C,aAEb,IAAIgD,EAASC,SAASC,cAAc,UACpCF,EAAOG,UAAY,GAEnBH,EAAOI,KADOR,GAAO,2CACE,WAAaH,EAAa,6BAA+BE,EAC5EE,IAGAG,EAAOH,MAAQA,GAEnBG,EAAOK,OAAQ,EACfL,EAAOM,OAAQ,EACfL,SAASM,KAAKC,YAAYR,GAlB9BzE,EAAQkF,mBAAqB,IAAIhF,EAAOiF,eAAe,sBACvDnF,EAAQoF,mBAAqB,IAAIlF,EAAOiF,eAAe,sBACvDnF,EAAQqF,gBAAkB,IAAInF,EAAOiF,eAAe,uBAkBpDnF,EAAQiE,WAAaA,EA2CrBjE,EAAQsF,uBA1CoC,WACxC,SAASA,EAETC,EAAYC,EAAUC,EAASnB,GAC3B5D,KAAK6E,WAAaA,EAClB7E,KAAK8E,SAAWA,EAChB9E,KAAK+E,QAAUA,EACf/E,KAAK4D,MAAQA,EACb5D,KAAKgF,OACLhF,KAAKa,MAAQwC,EAAS4B,kBAAkBjF,KAAK6E,YAAcD,EAAuB/D,MAAMqE,eAAiB5B,EAAO6B,KA+BpH,OA3BAP,EAAuBnE,UAAUuE,KACjC,WACI,IAAIJ,EAAuB/D,OAGvBwC,EAAS4B,kBAAkBjF,KAAK6E,YAAa,CAC7C,IAAIO,EAAY,IAAI9B,EAAO+B,gBAAgB,MAC3CT,EAAuB/D,MAAQuE,EAE/B7B,EAAW,WAAY,SAAUxC,GAAc,OAAOqE,EAAUE,KAAKvE,IADrDf,KAAK8E,SAAW,OAAS9E,KAAK8E,SAAW,GACuC9E,KAAK+E,QAAS/E,KAAK4D,SAO3HgB,EAAuB/D,MAAQ,KAC/B+D,EAAuBrC,WAAa,CAChC,CAAEjC,KAAMd,EAAO+F,aASZX,EAxCgC,6GCuGpC,MAAMY,UAA0BC,EAAA,EACnCC,YAAYC,EAAKC,EAAcC,GAC3BC,QACA9F,KAAK2F,IAAMA,EACX3F,KAAK4F,aAAeA,EACpB5F,KAAK6F,qBAAuBA,EAEhCH,WAAWK,GACP,MAAMnF,EAAe,IAAIoF,EAAA,GACnBH,qBAAEA,EAAoBD,aAAEA,GAAiB5F,KAK/C,OAJI6F,IAAyBA,EAAqBI,QAC9CrF,EAAasF,IAAI,IAAIC,EAA0BN,IAEnDjF,EAAasF,IAAIN,EAAa9E,UAAUiF,IACjCnF,GAGf,MAAMuF,UAAkCH,EAAA,EACpCN,YAAYU,GACRN,QACA9F,KAAKoG,OAASA,EACdA,EAAOC,QAEXX,cACI,MAAMU,EAASpG,KAAKoG,OACfA,EAAOH,QAAWjG,KAAKiG,SACxBH,MAAMzE,cACN+E,EAAOC,OAAS,EACK,IAAjBD,EAAOC,OAAeD,EAAOE,wBAC7BF,EAAO/E,wDC7JhB,MAAMkF,UAAoBC,EAAA,EAC7Bd,YAAYe,EAAWC,GACnBZ,MAAMW,EAAWC,GACjB1G,KAAKyG,UAAYA,EACjBzG,KAAK0G,KAAOA,EAEhBhB,SAASiB,EAAOC,EAAQ,GACpB,OAAIA,EAAQ,EACDd,MAAMe,SAASF,EAAOC,IAEjC5G,KAAK4G,MAAQA,EACb5G,KAAK2G,MAAQA,EACb3G,KAAKyG,UAAUK,MAAM9G,MACdA,MAEX0F,QAAQiB,EAAOC,GACX,OAAQA,EAAQ,GAAK5G,KAAKiG,OACtBH,MAAMxE,QAAQqF,EAAOC,GACrB5G,KAAK+G,SAASJ,EAAOC,GAE7BlB,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC,OAAe,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkB5G,KAAK4G,MAAQ,EAC1Dd,MAAMkB,eAAeP,EAAWxG,EAAI2G,GAExCH,EAAUK,MAAM9G,uBCxBxB,MAAMiH,UAAuBC,EAAA,GCC7B,MAAMC,EAAQ,IAAIF,EAAeV,OCC7Ba,0BCFJ,SAASC,EAAWC,EAAOb,GAC9B,OAIW,IAAIhB,EAAA,EAJVgB,EAIqBV,GAAcU,EAAUI,SAASU,EAAU,EAAG,CAAED,QAAOvB,eAHvDA,GAAcA,EAAWuB,MAAMA,IAM7D,SAASC,GAASD,MAAEA,EAAKvB,WAAEA,IACvBA,EAAWuB,MAAMA,IDNrB,SAAWF,GACPA,EAAuB,KAAI,IAC3BA,EAAwB,MAAI,IAC5BA,EAA2B,SAAI,IAHnC,CAIGA,IAAqBA,EAAmB,KACpC,MAAAI,EAAA,YAAMC,EACT/B,YAAYgC,EAAMnI,EAAO+H,GACrBtH,KAAK0H,KAAOA,EACZ1H,KAAKT,MAAQA,EACbS,KAAKsH,MAAQA,EACbtH,KAAK2H,SAAoB,MAATD,EAEpBhC,QAAQkC,GACJ,OAAQ5H,KAAK0H,MACT,IAAK,IACD,OAAOE,EAAStC,MAAQsC,EAAStC,KAAKtF,KAAKT,OAC/C,IAAK,IACD,OAAOqI,EAASN,OAASM,EAASN,MAAMtH,KAAKsH,OACjD,IAAK,IACD,OAAOM,EAASC,UAAYD,EAASC,YAGjDnC,GAAGJ,EAAMgC,EAAOO,GAEZ,OADa7H,KAAK0H,MAEd,IAAK,IACD,OAAOpC,GAAQA,EAAKtF,KAAKT,OAC7B,IAAK,IACD,OAAO+H,GAASA,EAAMtH,KAAKsH,OAC/B,IAAK,IACD,OAAOO,GAAYA,KAG/BnC,OAAOoC,EAAgBR,EAAOO,GAC1B,OAAIC,GAAiD,mBAAxBA,EAAexC,KACjCtF,KAAK+H,QAAQD,GAGb9H,KAAKgI,GAAGF,EAAgBR,EAAOO,GAG9CnC,eAEI,OADa1F,KAAK0H,MAEd,IAAK,IACD,OAAOtI,OAAA+F,EAAA,EAAA/F,CAAGY,KAAKT,OACnB,IAAK,IACD,OAAO8H,EAAWrH,KAAKsH,OAC3B,IAAK,IACD,OAAOlI,OAAA6I,EAAA,EAAA7I,GAEf,MAAM,IAAI8I,MAAM,sCAEpBxC,kBAAkBnG,GACd,YAAqB,IAAVA,EACA,IAAIkI,EAAa,IAAKlI,GAE1BkI,EAAaU,2BAExBzC,mBAAmB0C,GACf,OAAO,IAAIX,EAAa,SAAKY,EAAWD,GAE5C1C,wBACI,OAAO+B,EAAaa,6BAG5Bb,EAAaa,qBAAuB,IAAIb,EAAa,KACrDA,EAAaU,2BAA6B,IAAIV,EAAa,SAAKY,MA9DzD,GEOA,MAAME,UAA4BC,EAAA,EACrC9C,YAAY+C,EAAahC,EAAWG,EAAQ,GACxCd,MAAM2C,GACNzI,KAAKyG,UAAYA,EACjBzG,KAAK4G,MAAQA,EAEjBlB,gBAAgBgD,GACZ,MAAMC,aAAEA,EAAYF,YAAEA,GAAgBC,EACtCC,EAAaZ,QAAQU,GACrBzI,KAAKqB,cAETqE,gBAAgBiD,GACQ3I,KAAKyI,YACbvC,IAAIlG,KAAKyG,UAAUI,SAAS0B,EAAoBhB,SAAUvH,KAAK4G,MAAO,IAAIgC,EAAiBD,EAAc3I,KAAKyI,eAE9H/C,MAAMnG,GACFS,KAAK6I,gBAAgBrB,EAAasB,WAAWvJ,IAEjDmG,OAAO0C,GACHpI,KAAK6I,gBAAgBrB,EAAauB,YAAYX,IAC9CpI,KAAKqB,cAETqE,YACI1F,KAAK6I,gBAAgBrB,EAAawB,kBAClChJ,KAAKqB,eAGN,MAAMuH,EACTlD,YAAYiD,EAAcF,GACtBzI,KAAK2I,aAAeA,EACpB3I,KAAKyI,YAAcA,+BCxCpB,MAAMQ,UAAsBC,EAAA,EAC/BxD,YAAYyD,EAAaC,OAAOC,kBAAmBC,EAAaF,OAAOC,kBAAmB5C,GACtFX,QACA9F,KAAKyG,UAAYA,EACjBzG,KAAKuJ,QAAU,GACfvJ,KAAKwJ,qBAAsB,EAC3BxJ,KAAKyJ,YAAcN,EAAa,EAAI,EAAIA,EACxCnJ,KAAK0J,YAAcJ,EAAa,EAAI,EAAIA,EACpCA,IAAeF,OAAOC,mBACtBrJ,KAAKwJ,qBAAsB,EAC3BxJ,KAAKsF,KAAOtF,KAAK2J,wBAGjB3J,KAAKsF,KAAOtF,KAAK4J,eAGzBlE,uBAAuBnG,GACnB,MAAMgK,EAAUvJ,KAAKuJ,QACrBA,EAAQM,KAAKtK,GACTgK,EAAQO,OAAS9J,KAAKyJ,aACtBF,EAAQQ,QAEZjE,MAAMR,KAAK/F,GAEfmG,eAAenG,GACXS,KAAKuJ,QAAQM,KAAK,IAAIG,EAAYhK,KAAKiK,UAAW1K,IAClDS,KAAKkK,2BACLpE,MAAMR,KAAK/F,GAEfmG,WAAWK,GACP,MAAMyD,EAAsBxJ,KAAKwJ,oBAC3BD,EAAUC,EAAsBxJ,KAAKuJ,QAAUvJ,KAAKkK,2BACpDzD,EAAYzG,KAAKyG,UACjB0D,EAAMZ,EAAQO,OACpB,IAAIlJ,EACJ,GAAIZ,KAAKiG,OACL,MAAM,IAAImE,EAAA,EAYd,GAVSpK,KAAKqK,WAAarK,KAAKsK,SAC5B1J,EAAeoF,EAAA,EAAauE,OAG5BvK,KAAKwK,UAAUX,KAAK9D,GACpBnF,EAAe,IAAI6J,EAAA,EAAoBzK,KAAM+F,IAE7CU,GACAV,EAAWG,IAAIH,EAAa,IAAIwC,EAAoBxC,EAAYU,IAEhE+C,EACA,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,IAAQpE,EAAWE,OAAQyE,IAC3C3E,EAAWT,KAAKiE,EAAQmB,SAI5B,IAAK,IAAIA,EAAI,EAAGA,EAAIP,IAAQpE,EAAWE,OAAQyE,IAC3C3E,EAAWT,KAAKiE,EAAQmB,GAAGnL,OASnC,OANIS,KAAKsK,SACLvE,EAAWuB,MAAMtH,KAAK2K,aAEjB3K,KAAKqK,WACVtE,EAAW8B,WAERjH,EAEX8E,UACI,OAAQ1F,KAAKyG,WAAaU,GAAOyD,MAErClF,2BACI,MAAMkF,EAAM5K,KAAKiK,UACXR,EAAczJ,KAAKyJ,YACnBC,EAAc1J,KAAK0J,YACnBH,EAAUvJ,KAAKuJ,QACfsB,EAActB,EAAQO,OAC5B,IAAIgB,EAAc,EAClB,KAAOA,EAAcD,KACZD,EAAMrB,EAAQuB,GAAaC,KAAQrB,IAGxCoB,IAQJ,OANID,EAAcpB,IACdqB,EAAcE,KAAKC,IAAIH,EAAaD,EAAcpB,IAElDqB,EAAc,GACdvB,EAAQ2B,OAAO,EAAGJ,GAEfvB,GAGf,MAAMS,EACFtE,YAAYqF,EAAMxL,GACdS,KAAK+K,KAAOA,EACZ/K,KAAKT,MAAQA,GClGd,MAAM4L,UAAqBjC,EAAA,EAC9BxD,cACII,SAASsF,WACTpL,KAAKT,MAAQ,KACbS,KAAKqL,SAAU,EACfrL,KAAKsL,cAAe,EAExB5F,WAAWK,GACP,OAAI/F,KAAKsK,UACLvE,EAAWuB,MAAMtH,KAAK2K,aACf3E,EAAA,EAAauE,OAEfvK,KAAKsL,cAAgBtL,KAAKqL,SAC/BtF,EAAWT,KAAKtF,KAAKT,OACrBwG,EAAW8B,WACJ7B,EAAA,EAAauE,OAEjBzE,MAAMyF,WAAWxF,GAE5BL,KAAKnG,GACIS,KAAKsL,eACNtL,KAAKT,MAAQA,EACbS,KAAKqL,SAAU,GAGvB3F,MAAM4B,GACGtH,KAAKsL,cACNxF,MAAMwB,MAAMA,GAGpB5B,WACI1F,KAAKsL,cAAe,EAChBtL,KAAKqL,SACLvF,MAAMR,KAAKtF,KAAKT,OAEpBuG,MAAM+B,YCrCd,IAAI2D,EAAa,EACjB,MAAMC,EAAgB,GAOTC,EAAY,CACrBhG,aAAaiG,GACT,MAAMC,EAASJ,IAGf,OAFAC,EAAcG,GAAUD,EACxBE,QAAQC,UAAUC,KAAK,KAV/B,SAAsBH,GAClB,MAAMD,EAAKF,EAAcG,GACrBD,GACAA,KAO6BK,CAAaJ,IACnCA,GAEXlG,eAAekG,UACJH,EAAcG,KCdtB,MAAMK,UAAmBzF,EAAA,EAC5Bd,YAAYe,EAAWC,GACnBZ,MAAMW,EAAWC,GACjB1G,KAAKyG,UAAYA,EACjBzG,KAAK0G,KAAOA,EAEhBhB,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC,OAAc,OAAVA,GAAkBA,EAAQ,EACnBd,MAAMkB,eAAeP,EAAWxG,EAAI2G,IAE/CH,EAAUyF,QAAQrC,KAAK7J,MAChByG,EAAU0F,YAAc1F,EAAU0F,UAAYT,EAAUU,aAAa3F,EAAUK,MAAMuF,KAAK5F,EAAW,SAEhHf,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC,GAAe,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkB5G,KAAK4G,MAAQ,EACjE,OAAOd,MAAMwG,eAAe7F,EAAWxG,EAAI2G,GAEd,IAA7BH,EAAUyF,QAAQpC,SAClB4B,EAAUa,eAAetM,GACzBwG,EAAU0F,eAAY9D,ICpB3B,MAAMmE,UAAsBtF,EAAA,EAC/BxB,MAAM+G,GACFzM,KAAK0M,QAAS,EACd1M,KAAKmM,eAAY9D,EACjB,MAAM6D,QAAEA,GAAYlM,KACpB,IAAIsH,EACAqF,GAAS,EACTtG,EAAQ6F,EAAQpC,OACpB2C,EAASA,GAAUP,EAAQnC,QAC3B,GACI,GAAIzC,EAAQmF,EAAOnL,QAAQmL,EAAO9F,MAAO8F,EAAO7F,OAC5C,cAEG+F,EAAQtG,IAAUoG,EAASP,EAAQnC,UAE9C,GADA/J,KAAK0M,QAAS,EACVpF,EAAO,CACP,OAASqF,EAAQtG,IAAUoG,EAASP,EAAQnC,UACxC0C,EAAOpL,cAEX,MAAMiG,IClBX,MAAMsF,EAAO,IAAIJ,EAAcP,mBCD/B,MAAMY,UAA6BrG,EAAA,EACtCd,YAAYe,EAAWC,GACnBZ,MAAMW,EAAWC,GACjB1G,KAAKyG,UAAYA,EACjBzG,KAAK0G,KAAOA,EAEhBhB,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC,OAAc,OAAVA,GAAkBA,EAAQ,EACnBd,MAAMkB,eAAeP,EAAWxG,EAAI2G,IAE/CH,EAAUyF,QAAQrC,KAAK7J,MAChByG,EAAU0F,YAAc1F,EAAU0F,UAAYW,sBAAsB,IAAMrG,EAAUK,MAAM,SAErGpB,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC,GAAe,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkB5G,KAAK4G,MAAQ,EACjE,OAAOd,MAAMwG,eAAe7F,EAAWxG,EAAI2G,GAEd,IAA7BH,EAAUyF,QAAQpC,SAClBiD,qBAAqB9M,GACrBwG,EAAU0F,eAAY9D,ICnB3B,MAAM2E,UAAgC9F,EAAA,EACzCxB,MAAM+G,GACFzM,KAAK0M,QAAS,EACd1M,KAAKmM,eAAY9D,EACjB,MAAM6D,QAAEA,GAAYlM,KACpB,IAAIsH,EACAqF,GAAS,EACTtG,EAAQ6F,EAAQpC,OACpB2C,EAASA,GAAUP,EAAQnC,QAC3B,GACI,GAAIzC,EAAQmF,EAAOnL,QAAQmL,EAAO9F,MAAO8F,EAAO7F,OAC5C,cAEG+F,EAAQtG,IAAUoG,EAASP,EAAQnC,UAE9C,GADA/J,KAAK0M,QAAS,EACVpF,EAAO,CACP,OAASqF,EAAQtG,IAAUoG,EAASP,EAAQnC,UACxC0C,EAAOpL,cAEX,MAAMiG,IClBX,MAAM2F,EAAiB,IAAID,EAAwBH,GCAnDK,EAAA,YAAMC,UAA6BjG,EAAA,EACtCxB,YAAY0H,EAAkBC,EAAeC,EAAYlE,OAAOC,mBAC5DvD,MAAMsH,EAAiB,IAAMpN,KAAKuN,OAClCvN,KAAKsN,UAAYA,EACjBtN,KAAKuN,MAAQ,EACbvN,KAAK2M,OAAS,EAElBjH,QACI,MAAMwG,QAAEA,EAAOoB,UAAEA,GAActN,KAC/B,IAAIsH,EAAOmF,EACX,MAAQA,EAASP,EAAQ,KAAOO,EAAO7F,OAAS0G,IAC5CpB,EAAQnC,QACR/J,KAAKuN,MAAQd,EAAO7F,QAChBU,EAAQmF,EAAOnL,QAAQmL,EAAO9F,MAAO8F,EAAO7F,WAIpD,GAAIU,EAAO,CACP,KAAOmF,EAASP,EAAQnC,SACpB0C,EAAOpL,cAEX,MAAMiG,WAIlB6F,EAAqBK,gBAAkB,MAzBhC,GA0BA,MAAMH,UAAsB7G,EAAA,EAC/Bd,YAAYe,EAAWC,EAAMiG,GAAQlG,EAAUkG,OAAS,IACpD7G,MAAMW,EAAWC,GACjB1G,KAAKyG,UAAYA,EACjBzG,KAAK0G,KAAOA,EACZ1G,KAAK2M,MAAQA,EACb3M,KAAK0M,QAAS,EACd1M,KAAK2M,MAAQlG,EAAUkG,MAAQA,EAEnCjH,SAASiB,EAAOC,EAAQ,GACpB,IAAK5G,KAAKC,GACN,OAAO6F,MAAMe,SAASF,EAAOC,GAEjC5G,KAAK0M,QAAS,EACd,MAAMD,EAAS,IAAIY,EAAcrN,KAAKyG,UAAWzG,KAAK0G,MAEtD,OADA1G,KAAKkG,IAAIuG,GACFA,EAAO5F,SAASF,EAAOC,GAElClB,eAAee,EAAWxG,EAAI2G,EAAQ,GAClC5G,KAAK4G,MAAQH,EAAU8G,MAAQ3G,EAC/B,MAAMsF,QAAEA,GAAYzF,EAGpB,OAFAyF,EAAQrC,KAAK7J,MACbkM,EAAQuB,KAAKJ,EAAcK,cACpB,EAEXhI,eAAee,EAAWxG,EAAI2G,EAAQ,IAGtClB,SAASiB,EAAOC,GACZ,IAAoB,IAAhB5G,KAAK0M,OACL,OAAO5G,MAAMiB,SAASJ,EAAOC,GAGrClB,mBAAmBiI,EAAGC,GAClB,OAAID,EAAE/G,QAAUgH,EAAEhH,MACV+G,EAAEhB,QAAUiB,EAAEjB,MACP,EAEFgB,EAAEhB,MAAQiB,EAAEjB,MACV,GAGC,EAGPgB,EAAE/G,MAAQgH,EAAEhH,MACV,GAGC,uDC5Eb,SAASiH,EAAaC,GACzB,QAASA,IAAQA,aAAerI,EAAA,GAAmC,mBAAbqI,EAAIC,MAAgD,mBAAlBD,EAAIhN,mDCFhG,SAASkN,IAIL,OAHA9F,MAAM+F,KAAKjO,MACXA,KAAKkO,QAAU,uBACflO,KAAKmO,KAAO,eACLnO,KAEXgO,EAAiBvN,UAAYrB,OAAOgP,OAAOlG,MAAMzH,WAC1C,MAAM4N,EAAeL,wDCDrB,SAASM,GAAaC,EAAcC,EAAgB/H,GACvD,GAAI+H,EAAgB,CAChB,IAAIpP,OAAAqP,GAAA,EAAArP,CAAYoP,GAIZ,MAAO,IAAI/L,IAAS6L,GAAaC,EAAc9H,EAA3B6H,IAAyC7L,GAAMiM,KAAKtP,OAAAuP,EAAA,EAAAvP,CAAKqD,GAASrD,OAAAwP,GAAA,EAAAxP,CAAQqD,GAAQ+L,KAAkB/L,GAAQ+L,EAAe/L,KAH/IgE,EAAY+H,EAMpB,OAAO,YAAa/L,GAChB,MAAMoM,EAAU7O,KAChB,IAAI8O,EACJ,MAAMC,EAAS,CACXF,UACAC,UACAP,eACA9H,aAEJ,OAAO,IAAIhB,EAAA,EAAWM,IAClB,GAAKU,EAyBD,OAAOA,EAAUI,SAASmI,GAAU,EAHtB,CACVvM,OAAMsD,aAAYgJ,WAtBtB,IAAKD,EAAS,CACVA,EAAU,IAAI3D,EACd,MAAM8D,EAAU,IAAIC,KAChBJ,EAAQxJ,KAAK4J,EAAUpF,QAAU,EAAIoF,EAAU,GAAKA,GACpDJ,EAAQjH,YAEZ,IACI0G,EAAaY,MAAMN,EAAS,IAAIpM,EAAMwM,IAE1C,MAAO7G,GACChJ,OAAAgQ,EAAA,EAAAhQ,CAAe0P,GACfA,EAAQxH,MAAMc,GAGdiH,QAAQC,KAAKlH,IAIzB,OAAO0G,EAAQhO,UAAUiF,MAWzC,SAASiJ,GAASrI,GACd,MACMlE,KAAEA,EAAIsD,WAAEA,EAAUgJ,OAAEA,GAAWpI,GAC/B4H,aAAEA,EAAYM,QAAEA,EAAOpI,UAAEA,GAAcsI,EAC7C,IAAID,QAAEA,GAAYC,EAClB,IAAKD,EAAS,CACVA,EAAUC,EAAOD,QAAU,IAAI3D,EAC/B,MAAM8D,EAAU,IAAIC,KAEhBlP,KAAKkG,IAAIO,EAAUI,SAAS0I,GAAc,EAAG,CAAEhQ,MADjC2P,EAAUpF,QAAU,EAAIoF,EAAU,GAAKA,EACCJ,cAE1D,IACIP,EAAaY,MAAMN,EAAS,IAAIpM,EAAMwM,IAE1C,MAAO7G,GACH0G,EAAQxH,MAAMc,IAGtBpI,KAAKkG,IAAI4I,EAAQhO,UAAUiF,IAE/B,SAASwJ,GAAa5I,GAClB,MAAMpH,MAAEA,EAAKuP,QAAEA,GAAYnI,EAC3BmI,EAAQxJ,KAAK/F,GACbuP,EAAQjH,WCxEL,SAAS2H,GAAiBjB,EAAcC,EAAgB/H,GAC3D,GAAI+H,EAAgB,CAChB,IAAIpP,OAAAqP,GAAA,EAAArP,CAAYoP,GAIZ,MAAO,IAAI/L,IAAS+M,GAAiBjB,EAAc9H,EAA/B+I,IAA6C/M,GAAMiM,KAAKtP,OAAAuP,EAAA,EAAAvP,CAAIqD,GAAQrD,OAAAwP,GAAA,EAAAxP,CAAQqD,GAAQ+L,KAAkB/L,GAAQ+L,EAAe/L,KAHjJgE,EAAY+H,EAMpB,OAAO,YAAa/L,GAChB,MAAMsM,EAAS,CACXD,aAASzG,EACT5F,OACA8L,eACA9H,YACAoI,QAAS7O,MAEb,OAAO,IAAIyF,EAAA,EAAWM,IAClB,MAAM8I,QAAEA,GAAYE,EACpB,IAAID,QAAEA,GAAYC,EAClB,GAAKtI,EA2BD,OAAOA,EAAUI,SAAS4I,GAAU,EAAG,CAAEV,SAAQhJ,aAAY8I,YA1B7D,IAAKC,EAAS,CACVA,EAAUC,EAAOD,QAAU,IAAI3D,EAC/B,MAAM8D,EAAU,IAAIC,KAChB,MAAM9G,EAAM8G,EAAUnF,QAClB3B,EACA0G,EAAQxH,MAAMc,IAGlB0G,EAAQxJ,KAAK4J,EAAUpF,QAAU,EAAIoF,EAAU,GAAKA,GACpDJ,EAAQjH,aAEZ,IACI0G,EAAaY,MAAMN,EAAS,IAAIpM,EAAMwM,IAE1C,MAAO7G,GACChJ,OAAAgQ,EAAA,EAAAhQ,CAAe0P,GACfA,EAAQxH,MAAMc,GAGdiH,QAAQC,KAAKlH,IAIzB,OAAO0G,EAAQhO,UAAUiF,MAQzC,SAAS0J,GAAS9I,GACd,MAAMoI,OAAEA,EAAMhJ,WAAEA,EAAU8I,QAAEA,GAAYlI,GAClC4H,aAAEA,EAAY9L,KAAEA,EAAIgE,UAAEA,GAAcsI,EAC1C,IAAID,EAAUC,EAAOD,QACrB,IAAKA,EAAS,CACVA,EAAUC,EAAOD,QAAU,IAAI3D,EAC/B,MAAM8D,EAAU,IAAIC,KAChB,MAAM9G,EAAM8G,EAAUnF,QAElB/J,KAAKkG,IADLkC,EACS3B,EAAUI,SAAS6I,GAAe,EAAG,CAAEtH,MAAK0G,YAI5CrI,EAAUI,SAAS8I,GAAc,EAAG,CAAEpQ,MADjC2P,EAAUpF,QAAU,EAAIoF,EAAU,GAAKA,EACCJ,cAG9D,IACIP,EAAaY,MAAMN,EAAS,IAAIpM,EAAMwM,IAE1C,MAAO7G,GACHpI,KAAKkG,IAAIO,EAAUI,SAAS6I,GAAe,EAAG,CAAEtH,MAAK0G,cAG7D9O,KAAKkG,IAAI4I,EAAQhO,UAAUiF,IAE/B,SAAS4J,GAAajH,GAClB,MAAMnJ,MAAEA,EAAKuP,QAAEA,GAAYpG,EAC3BoG,EAAQxJ,KAAK/F,GACbuP,EAAQjH,WAEZ,SAAS6H,GAAchH,GACnB,MAAMN,IAAEA,EAAG0G,QAAEA,GAAYpG,EACzBoG,EAAQxH,MAAMc,kGCtFX,SAASwH,GAAiBC,EAAYC,EAAetB,GACxD,OAAIA,EACOoB,GAAiBC,EAAYC,GAAepB,KAAKtP,OAAAuP,EAAA,EAAAvP,CAAIqD,GAAQrD,OAAAwP,GAAA,EAAAxP,CAAQqD,GAAQ+L,KAAkB/L,GAAQ+L,EAAe/L,KAE1H,IAAIgD,EAAA,EAAWM,IAClB,MAAMkJ,EAAU,IAAIc,IAAMhK,EAAWT,KAAkB,IAAbyK,EAAEjG,OAAeiG,EAAE,GAAKA,GAClE,IAAIC,EACJ,IACIA,EAAWH,EAAWZ,GAE1B,MAAO7G,GAEH,YADArC,EAAWuB,MAAMc,GAGrB,GAAKhJ,OAAA6Q,GAAA,EAAA7Q,CAAW0Q,GAGhB,MAAO,IAAMA,EAAcb,EAASe,KClBrC,SAASE,GAASC,EAAuBC,EAAWC,EAASC,EAA4B7J,GAC5F,IAAI+H,EACA+B,EAkBJ,OAjBwB,GAApBnF,UAAUtB,QAEVyG,EADgBJ,EACOI,aACvBH,EAFgBD,EAEIC,UACpBC,EAHgBF,EAGEE,QAClB7B,EAJgB2B,EAIS3B,gBAAkBgC,EAAA,EAC3C/J,EALgB0J,EAKI1J,gBAEgB4B,IAA/BiI,GAA4ClR,OAAAqP,GAAA,EAAArP,CAAYkR,IAC7DC,EAAeJ,EACf3B,EAAiBgC,EAAA,EACjB/J,EAAY6J,IAGZC,EAAeJ,EACf3B,EAAiB8B,GAEd,IAAI7K,EAAA,EAAWM,IAClB,IAAIY,EAAQ4J,EACZ,GAAI9J,EACA,OAAOA,EAAUI,SAAS4J,GAAU,EAAG,CACnC1K,aACAsK,UACAD,YACA5B,iBACA7H,UAGR,OAAG,CACC,GAAIyJ,EAAW,CACX,IAAIM,EACJ,IACIA,EAAkBN,EAAUzJ,GAEhC,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,GAGrB,IAAKsI,EAAiB,CAClB3K,EAAW8B,WACX,OAGR,IAAItI,EACJ,IACIA,EAAQiP,EAAe7H,GAE3B,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,GAIrB,GADArC,EAAWT,KAAK/F,GACZwG,EAAWE,OACX,MAEJ,IACIU,EAAQ0J,EAAQ1J,GAEpB,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,OAOjC,SAASqI,GAAS9J,GACd,MAAMZ,WAAEA,EAAUqK,UAAEA,GAAczJ,EAClC,GAAIZ,EAAWE,OACX,OAEJ,GAAIU,EAAMgK,YACN,IACIhK,EAAMA,MAAQA,EAAM0J,QAAQ1J,EAAMA,OAEtC,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,QAKrBzB,EAAMgK,aAAc,EAExB,GAAIP,EAAW,CACX,IAAIM,EACJ,IACIA,EAAkBN,EAAUzJ,EAAMA,OAEtC,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,GAGrB,IAAKsI,EAED,YADA3K,EAAW8B,WAGf,GAAI9B,EAAWE,OACX,OAGR,IAAI1G,EACJ,IACIA,EAAQoH,EAAM6H,eAAe7H,EAAMA,OAEvC,MAAOyB,GAEH,YADArC,EAAWuB,MAAMc,GAGrB,OAAIrC,EAAWE,SAGfF,EAAWT,KAAK/F,GACZwG,EAAWE,aAJf,EAOOjG,KAAK6G,SAASF,GCvHlB,SAASiK,GAAIR,EAAWS,EAAa5I,EAAA,EAAO6I,EAAc7I,EAAA,GAC7D,OAAO7I,OAAAiF,GAAA,EAAAjF,CAAM,IAAMgR,IAAcS,EAAaC,GCF3C,SAASC,GAAUC,GACtB,OAAQ5R,OAAAwP,GAAA,EAAAxP,CAAQ4R,IAASA,EAAMC,WAAWD,GAAO,GAAM,ECCpD,SAASE,GAASC,EAAS,EAAG1K,EAAY2K,EAAA,GAO7C,QANKL,GAAUI,IAAWA,EAAS,KAC/BA,EAAS,GAER1K,GAA2C,mBAAvBA,EAAUI,WAC/BJ,EAAY2K,EAAA,GAET,IAAI3L,EAAA,EAAWM,IAClBA,EAAWG,IAAIO,EAAUI,SAASwK,GAAUF,EAAQ,CAAEpL,aAAYuL,QAAS,EAAGH,YACvEpL,IAGf,SAASsL,GAAS1K,GACd,MAAMZ,WAAEA,EAAUuL,QAAEA,EAAOH,OAAEA,GAAWxK,EACxCZ,EAAWT,KAAKgM,GAChBtR,KAAK6G,SAAS,CAAEd,aAAYuL,QAASA,EAAU,EAAGH,UAAUA,oBChBzD,MAAMI,GAAQ,IAAI9L,EAAA,EAAW+L,EAAA,GAC7B,SAASC,KACZ,OAAOF,GCAJ,SAASG,MAAqBC,GACjC,GAAuB,IAAnBA,EAAQ7H,OACR,OAAO7B,EAAA,EAEX,MAAO2J,KAAUC,GAAaF,EAC9B,OAAuB,IAAnBA,EAAQ7H,QAAgB1K,OAAAwP,GAAA,EAAAxP,CAAQwS,GACzBF,MAAqBE,GAEzB,IAAInM,EAAA,EAAWM,IAClB,MAAM+L,EAAU,IAAM/L,EAAWG,IAAIwL,MAAqBG,GAAW/Q,UAAUiF,IAC/E,OAAO3G,OAAA2S,GAAA,EAAA3S,CAAKwS,GAAO9Q,UAAU,CACzB4E,KAAKnG,GAASwG,EAAWT,KAAK/F,IAC9B+H,MAAOwK,EACPjK,SAAUiK,MCff,SAASE,GAAMlE,EAAKrH,GACvB,OAaW,IAAIhB,EAAA,EAbVgB,EAaqBV,IAClB,MAAMkM,EAAO7S,OAAO6S,KAAKnE,GACnBlN,EAAe,IAAIoF,EAAA,EAEzB,OADApF,EAAasF,IAAIO,EAAUI,SAASqL,GAAU,EAAG,CAAED,OAAMtF,MAAO,EAAG5G,aAAYnF,eAAckN,SACtFlN,GAhBWmF,IAClB,MAAMkM,EAAO7S,OAAO6S,KAAKnE,GACzB,IAAK,IAAIpD,EAAI,EAAGA,EAAIuH,EAAKnI,SAAW/D,EAAWE,OAAQyE,IAAK,CACxD,MAAM/E,EAAMsM,EAAKvH,GACboD,EAAIqE,eAAexM,IACnBI,EAAWT,KAAK,CAACK,EAAKmI,EAAInI,KAGlCI,EAAW8B,aAYhB,SAASqK,GAASvL,GACrB,MAAMsL,KAAEA,EAAItF,MAAEA,EAAK5G,WAAEA,EAAUnF,aAAEA,EAAYkN,IAAEA,GAAQnH,EACvD,IAAKZ,EAAWE,OACZ,GAAI0G,EAAQsF,EAAKnI,OAAQ,CACrB,MAAMnE,EAAMsM,EAAKtF,GACjB5G,EAAWT,KAAK,CAACK,EAAKmI,EAAInI,KAC1B/E,EAAasF,IAAIlG,KAAK6G,SAAS,CAAEoL,OAAMtF,MAAOA,EAAQ,EAAG5G,aAAYnF,eAAckN,cAGnF/H,EAAW8B,sDC7BhB,SAASuK,MAAQC,GACpB,GAA2B,IAAvBA,EAAYvI,OAAc,CAC1B,IAAI1K,OAAAwP,GAAA,EAAAxP,CAAQiT,EAAY,IAIpB,OAAOA,EAAY,GAHnBA,EAAcA,EAAY,GAMlC,OAAOjT,OAAAkT,GAAA,EAAAlT,CAAUiT,OAAahK,GAAW0F,KAAK,IAAIwE,IAE/C,MAAMA,GACT7M,KAAKK,EAAYyM,GACb,OAAOA,EAAO1R,UAAU,IAAI2R,GAAe1M,KAG5C,MAAM0M,WAAuBC,GAAA,EAChChN,YAAY+C,GACR3C,MAAM2C,GACNzI,KAAK2S,UAAW,EAChB3S,KAAKqS,YAAc,GACnBrS,KAAK4S,cAAgB,GAEzBlN,MAAMmN,GACF7S,KAAKqS,YAAYxI,KAAKgJ,GAE1BnN,YACI,MAAM2M,EAAcrS,KAAKqS,YACnBlI,EAAMkI,EAAYvI,OACxB,GAAY,IAARK,EACAnK,KAAKyI,YAAYZ,eAEhB,CACD,IAAK,IAAI6C,EAAI,EAAGA,EAAIP,IAAQnK,KAAK2S,SAAUjI,IAAK,CAC5C,IAAImI,EAAaR,EAAY3H,GACzB9J,EAAexB,OAAA0T,GAAA,EAAA1T,CAAkBY,KAAM6S,EAAYA,EAAYnI,GAC/D1K,KAAK4S,eACL5S,KAAK4S,cAAc/I,KAAKjJ,GAE5BZ,KAAKkG,IAAItF,GAEbZ,KAAKqS,YAAc,MAG3B3M,WAAWqN,EAAYC,EAAYC,EAAYC,EAAYC,GACvD,IAAKnT,KAAK2S,SAAU,CAChB3S,KAAK2S,UAAW,EAChB,IAAK,IAAIjI,EAAI,EAAGA,EAAI1K,KAAK4S,cAAc9I,OAAQY,IAC3C,GAAIA,IAAMuI,EAAY,CAClB,IAAIrS,EAAeZ,KAAK4S,cAAclI,GACtC9J,EAAaS,cACbrB,KAAKoT,OAAOxS,GAGpBZ,KAAK4S,cAAgB,KAEzB5S,KAAKyI,YAAYnD,KAAK0N,IC3DvB,SAASK,GAAMC,EAAQ,EAAGjN,EAAOI,GACpC,OAAO,IAAIhB,EAAA,EAAWM,SACJsC,IAAVhC,IACAA,EAAQiN,EACRA,EAAQ,GAEZ,IAAI3G,EAAQ,EACR4G,EAAUD,EACd,GAAI7M,EACA,OAAOA,EAAUI,SAAS2M,GAAU,EAAG,CACnC7G,QAAOtG,QAAOiN,QAAOvN,eAIzB,OAAG,CACC,GAAI4G,KAAWtG,EAAO,CAClBN,EAAW8B,WACX,MAGJ,GADA9B,EAAWT,KAAKiO,KACZxN,EAAWE,OACX,SAOb,SAASuN,GAAS7M,GACrB,MAAM2M,MAAEA,EAAK3G,MAAEA,EAAKtG,MAAEA,EAAKN,WAAEA,GAAeY,EACxCgG,GAAStG,EACTN,EAAW8B,YAGf9B,EAAWT,KAAKgO,GACZvN,EAAWE,SAGfU,EAAMgG,MAAQA,EAAQ,EACtBhG,EAAM2M,MAAQA,EAAQ,EACtBtT,KAAK6G,SAASF,KCrCX,SAAS8M,GAAMC,EAAU,EAAGC,EAAmBlN,GAClD,IAAI0K,GAAU,EAUd,OATIJ,GAAU4C,GACVxC,EAAS/H,OAAOuK,GAAqB,EAAK,EAAKvK,OAAOuK,GAEjDvU,OAAAqP,GAAA,EAAArP,CAAYuU,KACjBlN,EAAYkN,GAEXvU,OAAAqP,GAAA,EAAArP,CAAYqH,KACbA,EAAY2K,EAAA,GAET,IAAI3L,EAAA,EAAWM,IAClB,MAAM6N,EAAM7C,GAAU2C,GAChBA,GACEA,EAAUjN,EAAUmE,MAC5B,OAAOnE,EAAUI,SAASgN,GAAUD,EAAK,CACrCjH,MAAO,EAAGwE,SAAQpL,iBAI9B,SAAS8N,GAASlN,GACd,MAAMgG,MAAEA,EAAKwE,OAAEA,EAAMpL,WAAEA,GAAeY,EAEtC,GADAZ,EAAWT,KAAKqH,IACZ5G,EAAWE,OAAf,CAGK,IAAgB,IAAZkL,EACL,OAAOpL,EAAW8B,WAEtBlB,EAAMgG,MAAQA,EAAQ,EACtB3M,KAAK6G,SAASF,EAAOwK,IC/BlB,SAAS2C,GAAMC,EAAiBC,GACnC,OAAO,IAAIvO,EAAA,EAAWM,IAClB,IAAIkO,EAQAC,EAPJ,IACID,EAAWF,IAEf,MAAO3L,GAEH,YADArC,EAAWuB,MAAMc,GAIrB,IACI8L,EAASF,EAAkBC,GAE/B,MAAO7L,GAEH,YADArC,EAAWuB,MAAMc,GAGrB,MACMxH,GADSsT,EAAS9U,OAAA2S,GAAA,EAAA3S,CAAK8U,GAAUjM,EAAA,GACXnH,UAAUiF,GACtC,MAAO,KACHnF,EAAaS,cACT4S,GACAA,EAAS5S,kCCpBlB,SAAS8S,MAAO9B,GACnB,MAAM7D,EAAiB6D,EAAYA,EAAYvI,OAAS,GAIxD,MAH8B,mBAAnB0E,GACP6D,EAAY+B,MAEThV,OAAAkT,GAAA,EAAAlT,CAAUiT,OAAahK,GAAW0F,KAAK,IAAIsG,GAAY7F,IAE3D,MAAM6F,GACT3O,YAAY8I,GACRxO,KAAKwO,eAAiBA,EAE1B9I,KAAKK,EAAYyM,GACb,OAAOA,EAAO1R,UAAU,IAAIwT,GAAcvO,EAAY/F,KAAKwO,kBAG5D,MAAM8F,WAAsB9L,EAAA,EAC/B9C,YAAY+C,EAAa+F,EAAgB+F,EAASnV,OAAOgP,OAAO,OAC5DtI,MAAM2C,GACNzI,KAAKwU,UAAY,GACjBxU,KAAK0M,OAAS,EACd1M,KAAKwO,eAA4C,mBAAnBA,EAAiCA,EAAiB,KAChFxO,KAAKuU,OAASA,EAElB7O,MAAMnG,GACF,MAAMiV,EAAYxU,KAAKwU,UACnBpV,OAAAwP,GAAA,EAAAxP,CAAQG,GACRiV,EAAU3K,KAAK,IAAI4K,GAAoBlV,IAGvCiV,EAAU3K,KAD6B,mBAA3BtK,EAAMmV,GAAA,GACH,IAAIC,GAAepV,EAAMmV,GAAA,MAGzB,IAAIE,GAAkB5U,KAAKyI,YAAazI,KAAMT,IAGrEmG,YACI,MAAM8O,EAAYxU,KAAKwU,UACjBrK,EAAMqK,EAAU1K,OAEtB,GADA9J,KAAKqB,cACO,IAAR8I,EAAJ,CAIAnK,KAAK0M,OAASvC,EACd,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAKO,IAAK,CAC1B,IAAIgK,EAAWF,EAAU9J,GACrBgK,EAASG,kBACW7U,KAAKyI,YACbvC,IAAIwO,EAAS5T,UAAU4T,EAAUhK,IAG7C1K,KAAK0M,eAXT1M,KAAKyI,YAAYZ,WAezBnC,iBACI1F,KAAK0M,SACe,IAAhB1M,KAAK0M,QACL1M,KAAKyI,YAAYZ,WAGzBnC,iBACI,MAAM8O,EAAYxU,KAAKwU,UACjBrK,EAAMqK,EAAU1K,OAChBrB,EAAczI,KAAKyI,YACzB,IAAK,IAAIiC,EAAI,EAAGA,EAAIP,EAAKO,IAAK,CAC1B,IAAIgK,EAAWF,EAAU9J,GACzB,GAAiC,mBAAtBgK,EAAS/M,WAA4B+M,EAAS/M,WACrD,OAGR,IAAImN,GAAiB,EACrB,MAAMrS,EAAO,GACb,IAAK,IAAIiI,EAAI,EAAGA,EAAIP,EAAKO,IAAK,CAC1B,IAAIgK,EAAWF,EAAU9J,GACrBwJ,EAASQ,EAASpP,OAItB,GAHIoP,EAASpJ,iBACTwJ,GAAiB,GAEjBZ,EAAOa,KAEP,YADAtM,EAAYZ,WAGhBpF,EAAKoH,KAAKqK,EAAO3U,OAEjBS,KAAKwO,eACLxO,KAAKgV,mBAAmBvS,GAGxBgG,EAAYnD,KAAK7C,GAEjBqS,GACArM,EAAYZ,WAGpBnC,mBAAmBjD,GACf,IAAIyR,EACJ,IACIA,EAASlU,KAAKwO,eAAeW,MAAMnP,KAAMyC,GAE7C,MAAO2F,GAEH,YADApI,KAAKyI,YAAYnB,MAAMc,GAG3BpI,KAAKyI,YAAYnD,KAAK4O,IAG9B,MAAMS,GACFjP,YAAYgP,GACR1U,KAAK0U,SAAWA,EAChB1U,KAAKiV,WAAaP,EAASpP,OAE/BI,WACI,OAAO,EAEXA,OACI,MAAMwO,EAASlU,KAAKiV,WAEpB,OADAjV,KAAKiV,WAAajV,KAAK0U,SAASpP,OACzB4O,EAEXxO,eACI,MAAMuP,EAAajV,KAAKiV,WACxB,OAAOA,GAAcA,EAAWF,MAGxC,MAAMN,GACF/O,YAAYwP,GACRlV,KAAKkV,MAAQA,EACblV,KAAK2M,MAAQ,EACb3M,KAAK8J,OAAS,EACd9J,KAAK8J,OAASoL,EAAMpL,OAExBpE,CAACgP,GAAA,KACG,OAAO1U,KAEX0F,KAAKnG,GACD,MAAMmL,EAAI1K,KAAK2M,QAEf,OAAOjC,EAAI1K,KAAK8J,OAAS,CAAEvK,MADbS,KAAKkV,MACqBxK,GAAIqK,MAAM,GAAU,CAAExV,MAAO,KAAMwV,MAAM,GAErFrP,WACI,OAAO1F,KAAKkV,MAAMpL,OAAS9J,KAAK2M,MAEpCjH,eACI,OAAO1F,KAAKkV,MAAMpL,SAAW9J,KAAK2M,OAG1C,MAAMiI,WAA0BlC,GAAA,EAC5BhN,YAAY+C,EAAarC,EAAQyM,GAC7B/M,MAAM2C,GACNzI,KAAKoG,OAASA,EACdpG,KAAK6S,WAAaA,EAClB7S,KAAK6U,mBAAoB,EACzB7U,KAAKmV,OAAS,GACdnV,KAAKoV,YAAa,EAEtB1P,CAACgP,GAAA,KACG,OAAO1U,KAEX0F,OACI,MAAMyP,EAASnV,KAAKmV,OACpB,OAAsB,IAAlBA,EAAOrL,QAAgB9J,KAAKoV,WACrB,CAAE7V,MAAO,KAAMwV,MAAM,GAGrB,CAAExV,MAAO4V,EAAOpL,QAASgL,MAAM,GAG9CrP,WACI,OAAO1F,KAAKmV,OAAOrL,OAAS,EAEhCpE,eACI,OAA8B,IAAvB1F,KAAKmV,OAAOrL,QAAgB9J,KAAKoV,WAE5C1P,iBACQ1F,KAAKmV,OAAOrL,OAAS,GACrB9J,KAAKoV,YAAa,EAClBpV,KAAKoG,OAAOiP,kBAGZrV,KAAKyI,YAAYZ,WAGzBnC,WAAWqN,EAAYC,EAAYC,EAAYC,EAAYC,GACvDnT,KAAKmV,OAAOtL,KAAKmJ,GACjBhT,KAAKoG,OAAOkP,iBAEhB5P,UAAUnG,EAAOoN,GACb,OAAOvN,OAAA0T,GAAA,EAAA1T,CAAkBY,KAAMA,KAAK6S,WAAY7S,KAAM2M,qBClM9DlN,EAAA8V,EAAAC,EAAA,+BAAA/P,EAAA,IAAAhG,EAAA8V,EAAAC,EAAA,0CAAAC,EAAA,IAAAhW,EAAA8V,EAAAC,EAAA,sCAAAhQ,IAAA/F,EAAA8V,EAAAC,EAAA,+BAAAE,EAAA,IAAAjW,EAAA8V,EAAAC,EAAA,4BAAAtM,EAAA,IAAAzJ,EAAA8V,EAAAC,EAAA,oCAAAnQ,EAAA,IAAA5F,EAAA8V,EAAAC,EAAA,kCAAAvM,IAAAxJ,EAAA8V,EAAAC,EAAA,iCAAArK,IAAA1L,EAAA8V,EAAAC,EAAA,kCAAA5I,IAAAnN,EAAA8V,EAAAC,EAAA,mCAAApE,EAAA,IAAA3R,EAAA8V,EAAAC,EAAA,mCAAArO,IAAA1H,EAAA8V,EAAAC,EAAA,4CAAAvI,IAAAxN,EAAA8V,EAAAC,EAAA,yCAAAtI,IAAAzN,EAAA8V,EAAAC,EAAA,kCAAAnI,IAAA5N,EAAA8V,EAAAC,EAAA,8BAAAG,EAAA,IAAAlW,EAAA8V,EAAAC,EAAA,iCAAAxP,EAAA,IAAAvG,EAAA8V,EAAAC,EAAA,+BAAAhN,EAAA,IAAA/I,EAAA8V,EAAAC,EAAA,iCAAAhO,IAAA/H,EAAA8V,EAAAC,EAAA,yBAAA9G,EAAA,IAAAjP,EAAA8V,EAAAC,EAAA,yBAAAhE,EAAA,IAAA/R,EAAA8V,EAAAC,EAAA,6BAAAhF,EAAA,IAAA/Q,EAAA8V,EAAAC,EAAA,iCAAA3H,IAAApO,EAAA8V,EAAAC,EAAA,4CAAAI,EAAA,IAAAnW,EAAA8V,EAAAC,EAAA,+BAAAK,EAAA,IAAApW,EAAA8V,EAAAC,EAAA,4CAAApL,EAAA,IAAA3K,EAAA8V,EAAAC,EAAA,wCAAAM,EAAA,IAAArW,EAAA8V,EAAAC,EAAA,iCAAAnH,IAAA5O,EAAA8V,EAAAC,EAAA,iCAAAlH,KAAA7O,EAAA8V,EAAAC,EAAA,qCAAAhG,KAAA/P,EAAA8V,EAAAC,EAAA,kCAAAO,GAAA,IAAAtW,EAAA8V,EAAAC,EAAA,2BAAAQ,GAAA,IAAAvW,EAAA8V,EAAAC,EAAA,0BAAAnR,GAAA,IAAA5E,EAAA8V,EAAAC,EAAA,0BAAAvN,EAAA,IAAAxI,EAAA8V,EAAAC,EAAA,6BAAAS,GAAA,IAAAxW,EAAA8V,EAAAC,EAAA,yBAAAzD,GAAA,IAAAtS,EAAA8V,EAAAC,EAAA,8BAAAU,GAAA,IAAAzW,EAAA8V,EAAAC,EAAA,qCAAA5F,KAAAnQ,EAAA8V,EAAAC,EAAA,6BAAAtF,KAAAzQ,EAAA8V,EAAAC,EAAA,wBAAA5E,KAAAnR,EAAA8V,EAAAC,EAAA,6BAAAtE,KAAAzR,EAAA8V,EAAAC,EAAA,0BAAAW,GAAA,IAAA1W,EAAA8V,EAAAC,EAAA,0BAAA/D,KAAAhS,EAAA8V,EAAAC,EAAA,uBAAArQ,EAAA,IAAA1F,EAAA8V,EAAAC,EAAA,sCAAA9D,KAAAjS,EAAA8V,EAAAC,EAAA,0BAAAxD,KAAAvS,EAAA8V,EAAAC,EAAA,yBAAApD,KAAA3S,EAAA8V,EAAAC,EAAA,0BAAAnC,KAAA5T,EAAA8V,EAAAC,EAAA,+BAAAnO,IAAA5H,EAAA8V,EAAAC,EAAA,0BAAA/B,KAAAhU,EAAA8V,EAAAC,EAAA,0BAAA1B,KAAArU,EAAA8V,EAAAC,EAAA,wBAAArB,KAAA1U,EAAA8V,EAAAC,EAAA,0BAAAvN,EAAA,IAAAxI,EAAA8V,EAAAC,EAAA,0BAAAjE,KAAA9R,EAAA8V,EAAAC,EAAA,2BAAAY,GAAA,yCCCAhX,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAASC,EAAQ,QACjB4W,EAA4B5W,EAAQ,QACpC6W,EAA6B7W,EAAQ,QACrCwD,EAAwBxD,EAAQ,QA0BpCH,EAAQiX,gBAzB6B,WACjC,SAASA,KAsBT,OAlBAA,EAAgBC,QAEhB,WACI,OAAOD,GAEXA,EAAgBhU,WAAa,CACzB,CAAEjC,KAAMd,EAAO2D,SAAUV,KAAM,CAAC,CACpBnD,QAAS,CACL2D,EAAsBtD,oBAE1B8W,QAAS,CACLJ,EAA0BnT,uBAE9BwT,UAAW,CACPJ,EAA2B1R,4BAIxC2R,EAvByB,6DCC7B,MAAMI,EAEXjR,eAEAA,YAGAA,YACG7B,OAAe+S,MAAMC,KAAK,CACzBC,YAAa,uCACbC,GAAI,yBACJC,KAAM,6BACN9N,QAAS,QACT+N,KAAM,kBAIVvR,KAAKnG,KCFA,MAAM2X,uDCXTC,EAAgCC,EAAA,aAAQ,CAAEC,cAAe,EAAGC,OADhC,GACmEC,KAAM,KAElG,SAASC,EAA0BC,GAAM,OAAOL,EAAA,aAAQ,EAAG,GAAI,KAAM,MAE5E,ICDIM,EAAiCN,EAAA,aAAQ,CAAEC,cAAe,EAAGC,OADhC,CCPpB,CAAC,KDQuFC,KAAM,KAEpG,SAASI,EAA2BF,GAAM,OAAOL,EAAA,aAAQ,EAAG,EEhBnEK,MAAAL,EAAA,mEAAAQ,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAG,UAAAF,IFkBKE,GADgC,IEjBxCH,EAAyBI,UFiBDC,aACFF,GElBtBA,GAAA,aAAyBN,MAAAL,EAAA,kDAIzBK,MAAAL,EAAA,6IAAAQ,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAY,aAAAF,IFiBJE,GADiC,IEhBzCH,EAAyFI,UFgBjEE,KAAKJ,IACPC,GEjBtBA,GAAAP,EAAAL,IAAAC,EAAA,8BAAAe,EAAA,oBAAAf,EAAA,WAAAgB,EAAA,uBAAAhB,EAAA,UAAAiB,EAAA,sBAAAjY,QAAA,gBAAAF,SAAA,cAAyF,SAAAoY,EAAAV,GAAzFU,EAAAV,EAAA,IAAsC,6CAAkD,SAAAU,EAAAV,GAAxFU,EAAAV,EAAA,IAAAR,EAAA,aAAAQ,EAAA,GAAA3X,MFmBO,SAASsY,EAAgCd,GAAM,OAAOL,EAAA,aAAQ,EAAG,EAAEK,MAAQL,EAAA,aAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,kBAAmB,GAAI,KAAM,KAAM,KAAMO,EAA4BD,IAAkCN,EAAA,aAAQ,EAAG,OAAQ,KAAM,EAAGT,EAAwB,GAAI,KAAM,OAAQ,SAAU2B,EAAKV,GAAMU,EAAIV,EAAI,EAAG,IAAO,MACnU,IAAIY,EAA+BpB,EAAA,aAAQ,kBAAmBT,EAAwB4B,EAAiC,GAAI,GAAI,wFGxB/H9Y,EAAA8V,EAAAC,EAAA,8CAAAiD,IAmBA,IAAIA,EAA4BrB,EAAA,aAAQF,EAAqB,GAAI,SAAUO,GAAM,OAAOL,EAAA,aAAQ,CAACA,EAAA,aAAQ,IAAKA,EAAA,yBAA6BA,EAAA,yCAAqC,CAAC,CAAC,EAAG,CAACsB,EAAA,EAA+CF,IAAmC,CAAC,EAAGpB,EAAA,0BAA8BA,EAAA,cAAkBA,EAAA,aAAQ,KAAMuB,EAAA,eAAmBA,EAAA,qBAAyB,CAACvB,EAAA,UAAc,CAAC,EAAGuB,EAAA,6CAAyCvB,EAAA,aAAQ,KAAMgB,EAAA,uBAA2BA,EAAA,uBAA2B,CAAChB,EAAA,YAAgB,CAAC,EAAGgB,EAAA,oBAAwB,CAAC,EAAGA,EAAA,oBAAwB,CAAC,EAAGA,EAAA,mBAAuBhB,EAAA,aAAQ,WAAYuB,EAAA,aAAiBA,EAAA,aAAiB,IAAKvB,EAAA,aAAQ,WAAYwB,EAAA,EAAmBA,EAAA,EAAmB,IAAKxB,EAAA,aAAQ,WAAYwB,EAAA,EAAiBA,EAAA,EAAiB,IAAKxB,EAAA,aAAQ,WAAYyB,EAAA,EAAsBA,EAAA,EAAsB,IAAKzB,EAAA,aAAQ,WAAY0B,EAAA,EAAiBA,EAAA,EAAiB,IAAK1B,EAAA,aAAQ,WAAY2B,EAAA,sBAA0BA,EAAA,sBAA0B,IAAK3B,EAAA,aAAQ,WAAY4B,EAAA,gBAAqBA,EAAA,gBAAqB,IAAK5B,EAAA,aAAQ,WAAY6B,EAAA,EAAkBA,EAAA,EAAkB,CAAC,CAAC,EAAGA,EAAA,GAAwC,CAAC,EAAGA,EAAA,KAAe7B,EAAA,aAAQ,WAAYF,EAAqBA,EAAqB,IAAKE,EAAA,aAAQ,KAAM6B,EAAA,EAAY,WAAc,MAAO,CAAC,CAAC,CAAEC,KAAM,GAAIlB,UAAWrB,MAAgC,2CClBl0CvX,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAASC,EAAQ,QACrBH,EAAQ6Z,mBAAqB,IAAI3Z,EAAOiF,eAAe","file":"4-es2015.cc4df65597423f924693.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar recaptcha_loader_service_1 = require(\"./recaptcha-loader.service\");\nvar recaptcha_settings_1 = require(\"./recaptcha-settings\");\nvar nextId = 0;\nvar RecaptchaComponent = /** @class */ (function () {\n    function RecaptchaComponent(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = \"ngrecaptcha-\" + nextId++;\n        this.resolved = new core_1.EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    RecaptchaComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.subscription = this.loader.ready.subscribe(function (grecaptcha) {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                _this.grecaptcha = grecaptcha;\n                _this.renderRecaptcha();\n            }\n        });\n    };\n    RecaptchaComponent.prototype.ngOnDestroy = function () {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    /**\n       * Executes the invisible recaptcha.\n       * Does nothing if component's size is not set to \"invisible\".\n       */\n    RecaptchaComponent.prototype.execute = /**\n       * Executes the invisible recaptcha.\n       * Does nothing if component's size is not set to \"invisible\".\n       */\n    function () {\n        if (this.size !== 'invisible') {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    };\n    RecaptchaComponent.prototype.reset = function () {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    };\n    /** @internal */\n    /** @internal */\n    RecaptchaComponent.prototype.expired = /** @internal */\n    function () {\n        this.resolved.emit(null);\n    };\n    /** @internal */\n    /** @internal */\n    RecaptchaComponent.prototype.captchaResponseCallback = /** @internal */\n    function (response) {\n        this.resolved.emit(response);\n    };\n    /** @internal */\n    /** @internal */\n    RecaptchaComponent.prototype.grecaptchaReset = /** @internal */\n    function () {\n        var _this = this;\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(function () { return _this.grecaptcha.reset(_this.widget); });\n        }\n    };\n    /** @internal */\n    /** @internal */\n    RecaptchaComponent.prototype.renderRecaptcha = /** @internal */\n    function () {\n        var _this = this;\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, {\n            badge: this.badge,\n            callback: function (response) {\n                _this.zone.run(function () { return _this.captchaResponseCallback(response); });\n            },\n            'expired-callback': function () {\n                _this.zone.run(function () { return _this.expired(); });\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        });\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    };\n    RecaptchaComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    exportAs: 'reCaptcha',\n                    selector: 're-captcha',\n                    template: \"\",\n                },] },\n    ];\n    /** @nocollapse */\n    RecaptchaComponent.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: recaptcha_loader_service_1.RecaptchaLoaderService, },\n        { type: core_1.NgZone, },\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [recaptcha_settings_1.RECAPTCHA_SETTINGS,] },] },\n    ]; };\n    RecaptchaComponent.propDecorators = {\n        \"id\": [{ type: core_1.Input }, { type: core_1.HostBinding, args: ['attr.id',] },],\n        \"siteKey\": [{ type: core_1.Input },],\n        \"theme\": [{ type: core_1.Input },],\n        \"type\": [{ type: core_1.Input },],\n        \"size\": [{ type: core_1.Input },],\n        \"tabIndex\": [{ type: core_1.Input },],\n        \"badge\": [{ type: core_1.Input },],\n        \"resolved\": [{ type: core_1.Output },],\n    };\n    return RecaptchaComponent;\n}());\nexports.RecaptchaComponent = RecaptchaComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar recaptcha_component_1 = require(\"./recaptcha.component\");\nvar RecaptchaCommonModule = /** @class */ (function () {\n    function RecaptchaCommonModule() {\n    }\n    RecaptchaCommonModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        recaptcha_component_1.RecaptchaComponent,\n                    ],\n                    exports: [\n                        recaptcha_component_1.RecaptchaComponent,\n                    ],\n                },] },\n    ];\n    return RecaptchaCommonModule;\n}());\nexports.RecaptchaCommonModule = RecaptchaCommonModule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nexports.RECAPTCHA_LANGUAGE = new core_1.InjectionToken('recaptcha-language');\nexports.RECAPTCHA_BASE_URL = new core_1.InjectionToken('recaptcha-base-url');\nexports.RECAPTCHA_NONCE = new core_1.InjectionToken('recaptcha-nonce-tag');\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = function () {\n        onLoaded(grecaptcha);\n    };\n    var script = document.createElement('script');\n    script.innerHTML = '';\n    var baseUrl = url || 'https://www.google.com/recaptcha/api.js';\n    script.src = baseUrl + \"?render=\" + renderMode + \"&onload=ng2recaptchaloaded\" + urlParams;\n    if (nonce) {\n        // tslint:disable-next-line:no-any Remove \"any\" cast once we upgrade Angular to 7 and TypeScript along with it\n        // tslint:disable-next-line:no-any Remove \"any\" cast once we upgrade Angular to 7 and TypeScript along with it\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\nexports.loadScript = loadScript;\nvar RecaptchaLoaderService = /** @class */ (function () {\n    function RecaptchaLoaderService(\n    // tslint:disable-next-line:no-any\n    platformId, language, baseUrl, nonce) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.init();\n        this.ready = common_1.isPlatformBrowser(this.platformId) ? RecaptchaLoaderService.ready.asObservable() : rxjs_1.of();\n    }\n    /** @internal */\n    /** @internal */\n    RecaptchaLoaderService.prototype.init = /** @internal */\n    function () {\n        if (RecaptchaLoaderService.ready) {\n            return;\n        }\n        if (common_1.isPlatformBrowser(this.platformId)) {\n            var subject_1 = new rxjs_1.BehaviorSubject(null);\n            RecaptchaLoaderService.ready = subject_1;\n            var langParam = this.language ? '&hl=' + this.language : '';\n            loadScript('explicit', function (grecaptcha) { return subject_1.next(grecaptcha); }, langParam, this.baseUrl, this.nonce);\n        }\n    };\n    /**\n       * @internal\n       * @nocollapse\n       */\n    RecaptchaLoaderService.ready = null;\n    RecaptchaLoaderService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    RecaptchaLoaderService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [exports.RECAPTCHA_LANGUAGE,] },] },\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [exports.RECAPTCHA_BASE_URL,] },] },\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [exports.RECAPTCHA_NONCE,] },] },\n    ]; };\n    return RecaptchaLoaderService;\n}());\nexports.RecaptchaLoaderService = RecaptchaLoaderService;\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n//# sourceMappingURL=QueueScheduler.js.map","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queue = new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === \"N\";\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case \"N\":\n                return observer.next && observer.next(this.value);\n            case \"E\":\n                return observer.error && observer.error(this.error);\n            case \"C\":\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case \"N\":\n                return next && next(this.value);\n            case \"E\":\n                return error && error(this.error);\n            case \"C\":\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case \"N\":\n                return of(this.value);\n            case \"E\":\n                return throwError(this.error);\n            case \"C\":\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification(\"N\", value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification(\"E\", undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification(\"C\");\nNotification.undefinedValueNotification = new Notification(\"N\", undefined);\n//# sourceMappingURL=Notification.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        const _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","let nextHandle = 1;\nconst tasksByHandle = {};\nfunction runIfPresent(handle) {\n    const cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(() => runIfPresent(handle));\n        return handle;\n    },\n    clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asap = new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AnimationFrameAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n//# sourceMappingURL=isObservable.js.map","function TimeoutErrorImpl() {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n}\nTimeoutErrorImpl.prototype = Object.create(Error.prototype);\nexport const TimeoutError = TimeoutErrorImpl;\n//# sourceMappingURL=TimeoutError.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map","import { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n//# sourceMappingURL=iif.js.map","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                let observable = observables[i];\n                let subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=race.js.map","import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        this.values = values;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends OuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe(value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    }\n}\n//# sourceMappingURL=zip.js.map","export { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar recaptcha_common_module_1 = require(\"./recaptcha-common.module\");\nvar recaptcha_loader_service_1 = require(\"./recaptcha-loader.service\");\nvar recaptcha_component_1 = require(\"./recaptcha.component\");\nvar RecaptchaModule = /** @class */ (function () {\n    function RecaptchaModule() {\n    }\n    // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n    // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n    RecaptchaModule.forRoot = \n    // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n    function () {\n        return RecaptchaModule;\n    };\n    RecaptchaModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    exports: [\n                        recaptcha_component_1.RecaptchaComponent,\n                    ],\n                    imports: [\n                        recaptcha_common_module_1.RecaptchaCommonModule,\n                    ],\n                    providers: [\n                        recaptcha_loader_service_1.RecaptchaLoaderService,\n                    ],\n                },] },\n    ];\n    return RecaptchaModule;\n}());\nexports.RecaptchaModule = RecaptchaModule;\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-coming-soon',\n  templateUrl: './coming-soon.component.html',\n  styleUrls: ['./coming-soon.component.scss']\n})\nexport class ComingSoonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  testEmail() {\n    (window as any).Email.send({\n      SecureToken: '8a892398-3004-4f13-aedc-4ae933e12e57',\n      To: 'intellij-ron@gmail.com',\n      From: 'intellij-ron-bot@gmail.com',\n      Subject: 'YOLO!',\n      Body: 'FROM THE BOT!'\n    });\n  }\n\n  test(value: any) {\n    debugger;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecaptchaModule } from 'ng-recaptcha';\nimport { SharedModule } from '../shared/shared.module';\nimport { ComingSoonComponent } from './coming-soon.component';\n\n\nconst routes: Routes = [\n  {path: '', component: ComingSoonComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    ComingSoonComponent\n  ],\n  imports: [\n    SharedModule,\n    RecaptchaModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ComingSoonModule {\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./recaptcha.component\";\nimport * as i2 from \"./recaptcha-loader.service\";\nimport * as i3 from \"./recaptcha-settings\";\nvar styles_RecaptchaComponent = [];\nvar RenderType_RecaptchaComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_RecaptchaComponent, data: {} });\nexport { RenderType_RecaptchaComponent as RenderType_RecaptchaComponent };\nexport function View_RecaptchaComponent_0(_l) { return i0.ɵvid(0, [], null, null); }\nexport function View_RecaptchaComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"re-captcha\", [], [[1, \"id\", 0]], null, null, View_RecaptchaComponent_0, RenderType_RecaptchaComponent)), i0.ɵdid(1, 4374528, null, 0, i1.RecaptchaComponent, [i0.ElementRef, i2.RecaptchaLoaderService, i0.NgZone, [2, i3.RECAPTCHA_SETTINGS]], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).id; _ck(_v, 0, 0, currVal_0); }); }\nvar RecaptchaComponentNgFactory = i0.ɵccf(\"re-captcha\", i1.RecaptchaComponent, View_RecaptchaComponent_Host_0, { id: \"id\", siteKey: \"siteKey\", theme: \"theme\", type: \"type\", size: \"size\", tabIndex: \"tabIndex\", badge: \"badge\" }, { resolved: \"resolved\" }, []);\nexport { RecaptchaComponentNgFactory as RecaptchaComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./coming-soon.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../node_modules/ng-recaptcha/recaptcha/recaptcha.component.ngfactory\";\nimport * as i3 from \"ng-recaptcha/recaptcha/recaptcha.component\";\nimport * as i4 from \"ng-recaptcha/recaptcha/recaptcha-loader.service\";\nimport * as i5 from \"ng-recaptcha/recaptcha/recaptcha-settings\";\nimport * as i6 from \"./coming-soon.component\";\nvar styles_ComingSoonComponent = [i0.styles];\nvar RenderType_ComingSoonComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_ComingSoonComponent, data: {} });\nexport { RenderType_ComingSoonComponent as RenderType_ComingSoonComponent };\nexport function View_ComingSoonComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"p\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.testEmail() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\" coming-soon works!\\n\"])), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"re-captcha\", [[\"siteKey\", \"6LdfyagUAAAAAOyMyNEqQKanhgtBo2-xMkm4COX3\"]], [[1, \"id\", 0]], [[null, \"resolved\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"resolved\" === en)) {\n        var pd_0 = (_co.test($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_RecaptchaComponent_0, i2.RenderType_RecaptchaComponent)), i1.ɵdid(3, 4374528, null, 0, i3.RecaptchaComponent, [i1.ElementRef, i4.RecaptchaLoaderService, i1.NgZone, [2, i5.RECAPTCHA_SETTINGS]], { siteKey: [0, \"siteKey\"] }, { resolved: \"resolved\" })], function (_ck, _v) { var currVal_1 = \"6LdfyagUAAAAAOyMyNEqQKanhgtBo2-xMkm4COX3\"; _ck(_v, 3, 0, currVal_1); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 3).id; _ck(_v, 2, 0, currVal_0); }); }\nexport function View_ComingSoonComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-coming-soon\", [], null, null, null, View_ComingSoonComponent_0, RenderType_ComingSoonComponent)), i1.ɵdid(1, 114688, null, 0, i6.ComingSoonComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ComingSoonComponentNgFactory = i1.ɵccf(\"app-coming-soon\", i6.ComingSoonComponent, View_ComingSoonComponent_Host_0, {}, {}, []);\nexport { ComingSoonComponentNgFactory as ComingSoonComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<p (click)=\"testEmail()\">\n  coming-soon works!\n</p>\n\n<re-captcha (resolved)=\"test($event)\" siteKey=\"6LdfyagUAAAAAOyMyNEqQKanhgtBo2-xMkm4COX3\"></re-captcha>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./coming-soon.module\";\nimport * as i2 from \"../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./coming-soon.component.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng-recaptcha/recaptcha/recaptcha-loader.service\";\nimport * as i6 from \"vx-components\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"../shared/shared.module\";\nimport * as i9 from \"ng-recaptcha/recaptcha/recaptcha-common.module\";\nimport * as i10 from \"ng-recaptcha/recaptcha/recaptcha.module\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"./coming-soon.component\";\nvar ComingSoonModuleNgFactory = i0.ɵcmf(i1.ComingSoonModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.ComingSoonComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.RecaptchaLoaderService, i5.RecaptchaLoaderService, [i0.PLATFORM_ID, [2, i5.RECAPTCHA_LANGUAGE], [2, i5.RECAPTCHA_BASE_URL], [2, i5.RECAPTCHA_NONCE]]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i6.VxButtonModule, i6.VxButtonModule, []), i0.ɵmpd(1073742336, i6.VxMenuModule, i6.VxMenuModule, []), i0.ɵmpd(1073742336, i7.FontAwesomeModule, i7.FontAwesomeModule, []), i0.ɵmpd(1073742336, i8.SharedModule, i8.SharedModule, []), i0.ɵmpd(1073742336, i9.RecaptchaCommonModule, i9.RecaptchaCommonModule, []), i0.ɵmpd(1073742336, i10.RecaptchaModule, i10.RecaptchaModule, []), i0.ɵmpd(1073742336, i11.RouterModule, i11.RouterModule, [[2, i11.ɵangular_packages_router_router_a], [2, i11.Router]]), i0.ɵmpd(1073742336, i1.ComingSoonModule, i1.ComingSoonModule, []), i0.ɵmpd(1024, i11.ROUTES, function () { return [[{ path: \"\", component: i12.ComingSoonComponent }]]; }, [])]); });\nexport { ComingSoonModuleNgFactory as ComingSoonModuleNgFactory };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nexports.RECAPTCHA_SETTINGS = new core_1.InjectionToken('recaptcha-settings');\n"],"sourceRoot":""}